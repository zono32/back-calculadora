name: Backend CI/CD

on:
  push:
    branches:
      - main  # El pipeline se ejecutará en cada push a la rama 'main'

jobs:
  # Job 1: Ejecutar tests y Lint
  test-and-lint:
    runs-on: ubuntu-latest
    steps:
      # Paso 1: Checkout del código
      - name: Checkout code
        uses: actions/checkout@v3

      # Paso 2: Configuración de Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"  # Especificar la versión de Python que estás utilizando

      # Paso 3: Instalar dependencias
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt  # Instalar las dependencias desde el archivo requirements.txt

      # Paso 4: Ejecutar tests con pytest
      - name: Run Pytest
        run: pytest test/

      # Paso 5: Ejecutar análisis estático con Ruff
      - name: Run Ruff Lint
        run: ruff check --fix

  # Job 2: Build y Push a DockerHub
  dockerhub:
    needs: test-and-lint  # Este job depende de que 'test-and-lint' haya terminado con éxito
    runs-on: ubuntu-latest
    steps:
      # Paso 1: Checkout del código
      - name: Checkout code
        uses: actions/checkout@v3

      # Paso 2: Login en DockerHub
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Paso 3: Build y Push de la imagen Docker
      - name: Build and Push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/backend-app:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/backend-app:latest

  # Job 3: Build y Push a GitHub Container Registry
  github-container-registry:
    needs: test-and-lint  # Este job también depende de 'test-and-lint'
    runs-on: ubuntu-latest
    steps:
      # Paso 1: Checkout del código
      - name: Checkout code
        uses: actions/checkout@v3

      # Paso 2: Login en GitHub Container Registry
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.CD_TOKEN }}

      # Paso 3: Build y Push de la imagen Docker al GitHub Container Registry
      - name: Build and Push Docker image to GitHub Container Registry
        run: |
          docker build -t ghcr.io/lenvigo/back-calculadora-template:latest .
          docker push ghcr.io/lenvigo/back-calculadora-template:latest
